{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","apollo/errorMessages.ts","apollo/MyApolloProvider.tsx","pages/DiaryTab.tsx","pages/GroupTab.tsx","GroupTabs.tsx","lib/vk-bridge-react-bindings.ts","pages/CreateGroup.tsx","pages/JoinGroup.tsx","lib/vk-taptic-control.ts","URLS.ts","pages/SelectGroup.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","MESSAGES","query","add","GetJoinedGroups","full","mutate","CreateGroup","joinGroup","dialogContext","React","createContext","undefined","DialogContextProvider","Provider","useAppDialogContext","useContext","MyApolloProvider","children","useState","loaderText","setLoaderText","dialog","setDialog","apolloClient","useMemo","httpLink","HttpLink","uri","process","errorLink","onError","type","operationName","operation","networkError","operationType","definitions","title","message","loaderLink","ApolloLink","forward","operationContext","getContext","observable","subscribe","complete","error","authLink","setContext","_","headers","authorization","window","location","search","slice","ApolloClient","link","concat","cache","InMemoryCache","isOpen","translucent","backdropDismiss","header","onDidDismiss","handler","buttons","text","confirmText","role","confirmHandler","client","value","DiaryTab","fullscreen","GroupTab","collapse","size","GroupTabs","path","component","slot","tab","href","icon","triangle","ellipse","useVKBridge","darkSchemeBodyClass","useEffect","listener","detail","themeScheme","isDarkTheme","body","document","classList","remove","updateAppTheme","data","scheme","vkBridge","send","unsubscribe","CREATE_GROUP_MUTATION","gql","router","useIonRouter","useMutation","update","reset","onCompleted","back","context","mutateCreateGroup","useFormik","initialValues","groupName","description","isModerated","enableInviteLink","onSubmit","formData","a","console","log","variables","handleSubmit","handleChange","values","setFieldValue","formikErrors","errors","lines","position","maxlength","clearInput","onIonChange","required","name","checked","placeholder","expand","disabled","length","JOIN_GROUP_MUTATION","getInviteToken","tokenOrLink","tokenRegex","test","url","URL","hostname","TypeError","pathname","startsWith","vkGetParam","hash","tokenFromLink","lastIndex","err","JoinGroupComponent","joinGroupMutate","inviteLinkOrToken","inviteToken","scanQR","useCallback","qrData","qr_data","code_data","fill","supports","onClick","autoCapitalize","enterkeyhint","vkTapticEvent","JOINED_GROUP_QUERY","LEAVE_GROUP_MUTATION","SelectGroup","openAddGroupMenu","setOpenAddGroupMenu","PTRCompleteCallback","useRef","useQuery","notifyOnNetworkStatusChange","current","refetchGroups","refetch","openGroup","groupId","refreshGroupsForPtr","event","leaveGroupMutate","leaveGroupHandle","onIonRefresh","enter","push","URLS","joinedGroups","membersCount","ownerSmallAvatar","key","button","alt","src","people","side","color","addCircle","style","setupConfig","backButtonText","App","exact","render","to","JoinGroup","Boolean","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+IAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.75c20bcc.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t150,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t151,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t152,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t153,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t154,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t155,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t156,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t157,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t158,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t159,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t160,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t161,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t162,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t163,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t164,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t165,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t166,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t167,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t168,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t169,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t170,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t171,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t172,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t173,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t174,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t175,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t176,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t177,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t178,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t179,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t180,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t181,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t182,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t183,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t184,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t185,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t186,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t187,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t188,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t189,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t190,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t191,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t192,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 123;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t196,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 125;\nmodule.exports = webpackAsyncContext;","const FAILED_TO = \"Не удалось\";\nconst FETCH = \"получить\";\n\nconst MESSAGES: Record<\"query\" | \"mutate\", Record<\"add\" | \"full\", Record<string, string>>> = {\n    query: {\n        add: {\n            GetJoinedGroups: \"список групп\"\n        },\n        full: {}\n    },\n    mutate: {\n        add: {\n            CreateGroup: \"создать новую группу\",\n            joinGroup: \"присоединится к группе\"\n        },\n        full: {}\n    }\n};\n\nexport const operationErrorTitle = (type: \"query\" | \"mutate\", operationName: string): string => {\n    return MESSAGES[type].full[operationName] ||\n        (`${FAILED_TO}${type === \"query\" ? \" \" + FETCH : \"\"} ${MESSAGES[type].add[operationName] || `${type === \"mutate\" ? \"отправить \" : \"\"}данные`}`);\n};","import React, { useContext, useMemo, useState } from \"react\";\n\nimport { ApolloClient, ApolloLink, ApolloProvider, HttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { IonAlert, IonLoading } from \"@ionic/react\";\n\nimport { operationErrorTitle } from \"./errorMessages\";\n\ntype DialogType = null | {\n    type: \"message\",\n    title?: string,\n    message: string,\n    handler?: () => any;\n} | {\n    type: \"destruction\",\n    title: string,\n    message: string,\n    confirmText: string,\n    confirmHandler: () => void;\n};\n\ninterface DialogContext {\n    dialog: DialogType,\n    setDialog: (dialog: DialogType) => void;\n}\n\nconst dialogContext = React.createContext<DialogContext>(undefined as any);\nconst DialogContextProvider = dialogContext.Provider;\n\ninterface Props {\n}\n\nlet MyApolloProvider: React.FC<Props> = ({ children }) => {\n    const [loaderText, setLoaderText] = useState(null as null | string);\n    const [dialog, setDialog] = useState(null as DialogType);\n\n    const apolloClient = useMemo(() => {\n        const httpLink = new HttpLink({\n            uri: process.env.REACT_APP_GRAPHQL_ENDPOINT\n        });\n\n        const errorLink = onError(({ operation, networkError }) => {\n            // todo low fix typings\n            const operationType = (operation.query.definitions[0] as any).operation;\n            const isKnownOperation = operationType === \"query\" || operationType === \"mutate\";\n            setDialog({\n                type: \"message\",\n                title: isKnownOperation ? operationErrorTitle(operationType as any, operation.operationName) : \"GraphQL Error\",\n                message: networkError ? networkError.message : \"Произошло что-то страшное...\"\n            });\n        });\n\n        const loaderLink = new ApolloLink((operation, forward) => {\n            const operationContext = operation.getContext();\n            const observable = forward(operation);\n            setLoaderText(operationContext.loaderText || \"\");\n            observable.subscribe({\n                complete: () => setLoaderText(null),\n                error: () => setLoaderText(null)\n            });\n            return observable;\n        });\n\n        const authLink = setContext((_, { headers }) => {\n            return {\n                headers: {\n                    ...headers,\n                    authorization: window.location.search.slice(1)\n                }\n            };\n        });\n\n        const apolloClient = new ApolloClient({\n            link: authLink\n                .concat(loaderLink)\n                .concat(errorLink)\n                .concat(httpLink),\n            cache: new InMemoryCache()\n        });\n\n        return apolloClient;\n    }, []);\n\n    return <>\n        {\n            loaderText &&\n            <IonLoading\n                isOpen={true}\n                translucent\n                message={loaderText}\n            />\n        }\n        {\n            dialog &&\n            (dialog.type === \"message\" ?\n                <IonAlert\n                    isOpen={true}\n                    translucent\n                    backdropDismiss={false}\n                    header={dialog.title || process.env.REACT_APP_NAME}\n                    message={dialog.message}\n                    onDidDismiss={() => {\n                        dialog.handler && dialog.handler();\n                        setDialog(null);\n                    }}\n                    buttons={[\"OK\"]}\n                />\n                : dialog.type === \"destruction\" ?\n                    <IonAlert\n                        isOpen={true}\n                        translucent\n                        backdropDismiss={false}\n                        header={dialog.title}\n                        message={dialog.message}\n                        onDidDismiss={() => setDialog(null)}\n                        buttons={[\n                            {\n                                text: dialog.confirmText,\n                                role: \"destructive\",\n                                handler: dialog.confirmHandler\n                            },\n                            {\n                                text: \"Отмена\",\n                                role: \"cancel\"\n                            }\n                        ]}\n                    /> : null)\n        }\n        <ApolloProvider client={apolloClient} >\n            <DialogContextProvider value={{ dialog, setDialog }}>\n                {children}\n            </DialogContextProvider>\n        </ApolloProvider>\n    </>;\n};\n\nexport const useAppDialogContext = () => useContext(dialogContext);\n\nexport default MyApolloProvider;","import React from \"react\";\n\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from \"@ionic/react\";\n\ninterface Props {\n}\n\nlet DiaryTab: React.FC<Props> = () => {\n    return <IonPage>\n        <IonHeader>\n            <IonToolbar>\n                <IonTitle>Дневник</IonTitle>\n            </IonToolbar>\n        </IonHeader>\n        <IonContent fullscreen>\n            Дневник\n        </IonContent>\n    </IonPage>;\n};\n\nexport default DiaryTab;","import React from \"react\";\n\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from \"@ionic/react\";\n\ninterface Props {\n}\n\nlet GroupTab: React.FC<Props> = () => {\n    return <IonPage>\n        <IonHeader>\n            <IonToolbar>\n                <IonTitle>Tab 1</IonTitle>\n            </IonToolbar>\n        </IonHeader>\n        <IonContent fullscreen>\n            <IonHeader collapse=\"condense\">\n                <IonToolbar>\n                    <IonTitle size=\"large\">test</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n        </IonContent>\n    </IonPage>;\n};\n\nexport default GroupTab;","import { ellipse, triangle } from \"ionicons/icons\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\n\nimport { IonIcon, IonLabel, IonRouterOutlet, IonTabBar, IonTabButton, IonTabs } from \"@ionic/react\";\n\nimport DiaryTab from \"./pages/DiaryTab\";\nimport GroupTab from \"./pages/GroupTab\";\n\ninterface Props {\n}\n\nlet GroupTabs: React.FC<Props> = () => {\n    return <IonTabs>\n        <IonRouterOutlet>\n            <Route path=\"/group/diary\" component={DiaryTab} />\n            <Route path=\"/group/info\" component={GroupTab} />\n        </IonRouterOutlet>\n        <IonTabBar slot=\"bottom\">\n            <IonTabButton tab=\"diary\" href=\"/group/diary\">\n                <IonIcon icon={triangle} />\n                <IonLabel>Дневник</IonLabel>\n            </IonTabButton>\n            <IonTabButton tab=\"group\" href=\"/group/info\">\n                <IonIcon icon={ellipse} />\n                <IonLabel>Группа</IonLabel>\n            </IonTabButton>\n        </IonTabBar>\n    </IonTabs>;\n};\n\nexport default GroupTabs;","import { useEffect } from \"react\";\n\nimport vkBridge, { AppearanceSchemeType, VKBridgeSubscribeHandler } from \"@vkontakte/vk-bridge\";\n\ninterface HookParams {\n    darkSchemeBodyClass: string | null | undefined;\n}\n\n// todo params can be changed\nexport const useVKBridge = ({ darkSchemeBodyClass }: HookParams) => {\n    useEffect(() => {\n        const updateAppTheme = (themeScheme: AppearanceSchemeType) => {\n            if (!darkSchemeBodyClass) return;\n            let isDarkTheme = themeScheme === \"client_dark\" || themeScheme === \"space_gray\";\n            let { body } = document;\n            if (isDarkTheme) body.classList.add(darkSchemeBodyClass);\n            else body.classList.remove(darkSchemeBodyClass);\n        };\n\n        const listener: VKBridgeSubscribeHandler = (e) => {\n            switch (e.detail.type) {\n                case \"VKWebAppUpdateConfig\":\n                    updateAppTheme(e.detail.data.scheme);\n                    break;\n            }\n        };\n\n        vkBridge.send(\"VKWebAppInit\");\n        vkBridge.subscribe(listener);\n\n        return () => {\n            vkBridge.unsubscribe(listener);\n        };\n        // eslint-disable-next-line\n    }, []);\n};","import { useFormik } from \"formik\";\nimport React from \"react\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n    IonBackButton,\n    IonButton,\n    IonButtons,\n    IonContent,\n    IonHeader,\n    IonInput,\n    IonItem,\n    IonLabel,\n    IonList,\n    IonListHeader,\n    IonPage,\n    IonRadio,\n    IonRadioGroup,\n    IonTextarea,\n    IonTitle,\n    IonToggle,\n    IonToolbar,\n    useIonRouter\n} from \"@ionic/react\";\n\nimport { CreateGroup as CreateGroupMutation, CreateGroupVariables } from \"./__generated__/CreateGroup\";\n\ninterface Props {\n}\n\n\nconst CREATE_GROUP_MUTATION = gql`\n    mutation CreateGroup($isModerated: Boolean!, $groupName: String!, $description: String!, $enableInviteLink: Boolean!) {\n        createGroup(isModerated: $isModerated, groupName: $groupName, description: $description, enableInviteLink: $enableInviteLink)\n    }\n`;\n// todo formik\n\nlet CreateGroup: React.FC<Props> = () => {\n    const router = useIonRouter();\n\n    const [mutateCreateGroup] = useMutation<CreateGroupMutation, CreateGroupVariables>(CREATE_GROUP_MUTATION, {\n        async update(cache, { data }) {\n            if (!data) return;\n            // todo update cache\n            await cache.reset();\n        },\n        onCompleted() {\n            router.back();\n        },\n        context: {\n            loaderText: \"Создание группы...\"\n        }\n    });\n\n    const { handleSubmit, handleChange, values, setFieldValue, errors: formikErrors } = useFormik({\n        initialValues: {\n            groupName: \"\",\n            description: \"\",\n            isModerated: false,\n            enableInviteLink: true\n        },\n        onSubmit: async (formData) => {\n            console.log(formData);\n            mutateCreateGroup({\n                variables: formData\n            });\n        }\n    });\n\n    return <IonPage>\n        <IonHeader>\n            <IonToolbar>\n                <IonButtons slot=\"start\">\n                    <IonBackButton />\n                </IonButtons>\n                <IonTitle>Создать группу</IonTitle>\n            </IonToolbar>\n        </IonHeader>\n        <IonContent fullscreen>\n            <IonHeader collapse=\"condense\" translucent>\n                <IonToolbar>\n                    <IonTitle size=\"large\">Создать группу</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n            <form onSubmit={handleSubmit}>\n                <IonList lines=\"full\">\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Название группы</IonLabel>\n                        <IonInput maxlength={50} clearInput onIonChange={handleChange} required name=\"groupName\" />\n                    </IonItem>\n                    <IonRadioGroup name=\"isModerated\" value={values[\"isModerated\"]} onIonChange={handleChange}>\n                        <IonListHeader>\n                            <IonLabel>Тип группы</IonLabel>\n                        </IonListHeader>\n\n                        <IonItem>\n                            <IonLabel>Свободная</IonLabel>\n                            <IonRadio slot=\"start\" value={false} />\n                        </IonItem>\n\n                        <IonItem>\n                            <IonLabel>Модерируемая</IonLabel>\n                            <IonRadio slot=\"start\" value={true} />\n                        </IonItem>\n                    </IonRadioGroup>\n                    <IonItem>\n                        <IonLabel>Пригласительная ссылка</IonLabel>\n                        <IonToggle\n                            name=\"enableInviteLink\"\n                            checked={values[\"enableInviteLink\"]}\n                            onIonChange={e => setFieldValue(\"enableInviteLink\", e.detail.checked)}\n                        />\n                    </IonItem>\n                </IonList>\n                <IonItem>\n                    <IonTextarea\n                        name=\"description\"\n                        placeholder=\"Описание (необязательно)\"\n                        value={values[\"description\"]}\n                        onIonChange={handleChange}\n                        maxlength={400}\n                    />\n                </IonItem>\n                <IonButton\n                    expand=\"block\"\n                    disabled={Object.keys(formikErrors).length !== 0}\n                    type=\"submit\"\n                >Создать группу</IonButton>\n                {/* <p>\n                    // todo\n                    Всё это можно будет изменить в настройках группы.\n                </p> */}\n            </form>\n        </IonContent>\n    </IonPage>;\n};\n\nexport default CreateGroup;","import { useFormik } from \"formik\";\nimport React, { useCallback } from \"react\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n    IonBackButton,\n    IonButton,\n    IonButtons,\n    IonContent,\n    IonHeader,\n    IonInput,\n    IonItem,\n    IonLabel,\n    IonList,\n    IonPage,\n    IonTitle,\n    IonToolbar\n} from \"@ionic/react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { vkGetParam } from \"@zardoy/vk-params\";\n\nimport { useAppDialogContext } from \"../apollo/MyApolloProvider\";\nimport { JoinGroup, JoinGroupVariables } from \"./__generated__/JoinGroup\";\n\ninterface Props {\n}\n\nconst JOIN_GROUP_MUTATION = gql`\n    mutation JoinGroup($inviteToken: String!) {\n        joinGroup(inviteToken: $inviteToken)\n    }\n`;\n\nconst getInviteToken = (tokenOrLink: string): string | null => {\n    const tokenRegex = /\\w{8}-\\w{4}-11eb-\\w{4}-\\w{12}/;\n    if (tokenRegex.test(tokenOrLink)) {// its token\n        return tokenOrLink;\n    } else {// maybe its a link\n        try {\n            const url = new URL(tokenOrLink);\n            if (url.hostname !== \"vk.com\") throw new TypeError(\"Its not even a VK link\");\n            if (!url.pathname.startsWith(`/app${vkGetParam(\"app_id\")}`)) throw new TypeError(`This link doesn't belong to this vk app`);\n            if (!url.hash.startsWith(`#invite`)) throw new TypeError(`This link doesn't contain invite token`);\n            const tokenFromLink = url.hash.slice(`#invite`.length);\n            tokenRegex.lastIndex = 0;\n            if (!tokenRegex.test(tokenFromLink)) throw new TypeError(`Invalid invite token`);\n            return tokenFromLink;\n        } catch (err) {\n            return null;\n        }\n    }\n};\n\nlet JoinGroupComponent: React.FC<Props> = () => {\n    const { setDialog } = useAppDialogContext();\n\n    const [joinGroupMutate] = useMutation<JoinGroup, JoinGroupVariables>(JOIN_GROUP_MUTATION, {\n        context: { loaderText: \"Поиск группы...\" }\n    });\n\n    const { handleSubmit, values, handleChange } = useFormik({\n        initialValues: {\n            inviteLinkOrToken: \"\"\n        },\n        onSubmit({ inviteLinkOrToken }) {\n            const inviteToken = getInviteToken(inviteLinkOrToken);\n            if (!inviteToken) {\n                setDialog({\n                    type: \"message\",\n                    title: \"Ошибка\",\n                    message: \"Поле не содержит пригласительной ссылки или токена\"\n                });\n                return;\n            }\n            joinGroupMutate({\n                variables: { inviteToken }\n            });\n        }\n    });\n\n    const scanQR = useCallback(async () => {\n        try {\n            const qrData: any = vkBridge.send(\"VKWebAppOpenQR\");\n            const inviteToken = getInviteToken(qrData.qr_data || qrData.code_data);\n            if (!inviteToken) return;\n            joinGroupMutate({\n                variables: {\n                    inviteToken\n                }\n            });\n        } catch (err) {\n            // todo error message\n            setDialog({\n                type: \"message\",\n                message: \"Не удалось отсканировать QR\"\n            });\n        }\n    }, [joinGroupMutate, setDialog]);\n\n    return <IonPage>\n        <IonHeader>\n            <IonButtons slot=\"start\">\n                <IonBackButton />\n            </IonButtons>\n            <IonToolbar>\n                <IonTitle>Присоединиться к группе</IonTitle>\n            </IonToolbar>\n        </IonHeader>\n        <IonContent fullscreen>\n            <IonHeader collapse=\"condense\" translucent>\n                <IonToolbar>\n                    <IonTitle size=\"large\">Присоединиться к группе</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n            <IonButton\n                expand=\"block\"\n                fill=\"outline\"\n                disabled={!vkBridge.supports(\"VKWebAppOpenQR\")}\n                onClick={scanQR}\n            >\n                Сканировать QR\n            </IonButton>\n            <form onSubmit={handleSubmit}>\n                <IonList>\n                    <IonItem>\n                        <IonLabel position=\"stacked\">Ссылка или ключ приглашения группы</IonLabel>\n                        <IonInput\n                            clearInput\n                            onIonChange={handleChange}\n                            required\n                            value={values[\"inviteLinkOrToken\"]}\n                            name=\"inviteLinkOrToken\"\n                            autoCapitalize=\"off\"\n                            enterkeyhint=\"enter\"\n                        />\n                    </IonItem>\n                </IonList>\n                <IonButton expand=\"block\" type=\"submit\">Войти в группу</IonButton>\n            </form>\n        </IonContent>\n    </IonPage>;\n};\n\nexport default JoinGroupComponent;","import vkBridge from \"@vkontakte/vk-bridge\";\n\nexport const vkTapticEvent = {\n    toggle: () => {\n        vkBridge.send(\"VKWebAppTapticImpactOccurred\", { style: \"light\" });\n    },\n    ptrPull: () => {\n        vkBridge.send(\"VKWebAppTapticSelectionChanged\");\n    }\n};","export default {\n    JOINED_GROUPS: \"/joined-groups/\",\n    CREATE_GROUP: \"/create-group/\",\n    JOIN_GROUP: \"/join-group/\"\n};","import { add, addCircle, enter, people } from \"ionicons/icons\";\nimport React, { useCallback, useRef, useState } from \"react\";\n\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { RefresherEventDetail } from \"@ionic/core\";\nimport {\n    IonActionSheet,\n    IonAvatar,\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonIcon,\n    IonItem,\n    IonItemOption,\n    IonItemOptions,\n    IonItemSliding,\n    IonLabel,\n    IonList,\n    IonNote,\n    IonPage,\n    IonRefresher,\n    IonRefresherContent,\n    IonTitle,\n    IonToolbar,\n    useIonRouter\n} from \"@ionic/react\";\n\nimport { useAppDialogContext } from \"../apollo/MyApolloProvider\";\nimport { vkTapticEvent } from \"../lib/vk-taptic-control\";\nimport URLS from \"../URLS\";\nimport { GetJoinedGroups } from \"./__generated__/GetJoinedGroups\";\nimport { LeaveGroup, LeaveGroupVariables } from \"./__generated__/LeaveGroup\";\n\n// todo\nconst GROUP_LIMIT = 20;\n\nconst JOINED_GROUP_QUERY = gql`\n    query GetJoinedGroups {\n        joinedGroups {\n            id\n            name\n            membersCount\n            ownerId\n            ownerSmallAvatar\n        }\n}\n`;\nconst LEAVE_GROUP_MUTATION = gql`\n    mutation LeaveGroup($groupId: Int!) {\n        leaveGroup(groupId: $groupId) \n    }\n`;\n\ninterface Props {\n}\n\nlet SelectGroup: React.FC<Props> = () => {\n    const router = useIonRouter();\n    const { setDialog } = useAppDialogContext();\n\n    // STATE\n    const [openAddGroupMenu, setOpenAddGroupMenu] = useState(false);\n\n    /* PTR - Pull To Refresh */\n    const PTRCompleteCallback = useRef(null as null | (() => void));\n\n    const { data, refetch: refetchGroups } = useQuery<GetJoinedGroups>(JOINED_GROUP_QUERY, {\n        notifyOnNetworkStatusChange: true,\n        onCompleted() {\n            PTRCompleteCallback.current && PTRCompleteCallback.current();\n            PTRCompleteCallback.current = null;\n        },\n        context: {\n            loaderText: \"Загрузка групп...\"\n        }\n    });\n\n\n    const openGroup = useCallback((groupId: number) => {\n\n    }, []);\n\n    const refreshGroupsForPtr = useCallback((event: CustomEvent<RefresherEventDetail>) => {\n        PTRCompleteCallback.current = event.detail.complete;\n        vkTapticEvent.ptrPull();\n        refetchGroups();\n    }, [refetchGroups]);\n\n    const [leaveGroupMutate] = useMutation<LeaveGroup, LeaveGroupVariables>(LEAVE_GROUP_MUTATION, {\n        update: (cache) => cache.reset()\n    });\n\n    const leaveGroupHandle = useCallback((groupId: number) => {\n        setDialog({\n            type: \"destruction\",\n            title: \"Подтвердите действие\",\n            message: \"Покинув группу, вы больше не сможете в неё вернуться без её пригласительной ссылки\",\n            confirmText: \"Покинуть группу\",\n            confirmHandler: () => {\n                leaveGroupMutate({ variables: { groupId } });\n            },\n        });\n    }, [leaveGroupMutate, setDialog]);\n\n    return <IonPage>\n        <IonHeader>\n            <IonToolbar>\n                <IonTitle>Группы</IonTitle>\n            </IonToolbar>\n        </IonHeader>\n        <IonContent fullscreen>\n            <IonRefresher slot=\"fixed\" onIonRefresh={refreshGroupsForPtr}>\n                <IonRefresherContent />\n            </IonRefresher>\n            <IonHeader collapse=\"condense\">\n                <IonToolbar>\n                    <IonTitle size=\"large\">Группы</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n            <IonActionSheet\n                isOpen={openAddGroupMenu}\n                header=\"Добавить группу\"\n                onDidDismiss={() => setOpenAddGroupMenu(false)}\n                buttons={[\n                    {\n                        text: \"Присоединится\",\n                        icon: enter,\n                        handler() {\n                            router.push(URLS.JOIN_GROUP);\n                        }\n                    },\n                    {\n                        text: \"Создать свою\",\n                        icon: add,\n                        handler() {\n                            router.push(URLS.CREATE_GROUP);\n                        }\n                    },\n                    {\n                        text: \"Отмена\",\n                        role: \"cancel\"\n                    }\n                ]}\n            />\n            {\n                !data ? <>\n                    <IonButton expand=\"block\" onClick={() => refetchGroups()}>Перезагрузить</IonButton>\n                </> :\n                    <IonList lines=\"full\">\n                        {\n                            data.joinedGroups.map(({ id: groupId, membersCount, name: groupName, ownerSmallAvatar }) => {\n                                return (\n                                    <IonItemSliding key={groupId}>\n                                        <IonItem button onClick={() => openGroup(groupId)}>\n                                            {ownerSmallAvatar &&\n                                                <IonAvatar slot=\"start\">\n                                                    <img alt=\"Group owner's avatar\" src={ownerSmallAvatar} />\n                                                </IonAvatar>\n                                            }\n                                            <IonLabel>{groupName}</IonLabel>\n                                            <IonNote slot=\"end\">\n                                                <IonIcon icon={people} /> {membersCount}\n                                            </IonNote>\n                                        </IonItem>\n\n                                        <IonItemOptions side=\"end\">\n                                            <IonItemOption\n                                                color=\"danger\"\n                                                onClick={() => leaveGroupHandle(groupId)}\n                                            >\n                                                Покинуть\n                                            </IonItemOption>\n                                        </IonItemOptions>\n                                    </IonItemSliding>\n                                );\n                            })\n                        }\n                        {\n                            data.joinedGroups.length < GROUP_LIMIT &&\n                            <IonItem button onClick={() => setOpenAddGroupMenu(true)}>\n                                <IonIcon slot=\"start\" icon={addCircle} style={{ color: \"lime\" }} />\n                                <IonLabel>Добавить группу</IonLabel>\n                            </IonItem>\n                        }\n                    </IonList>\n            }\n        </IonContent>\n    </IonPage>;\n};\n\nexport default SelectGroup;","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { IonApp, IonPage, IonRouterOutlet, setupConfig } from \"@ionic/react\";\nimport { IonReactHashRouter } from \"@ionic/react-router\";\n\nimport MyApolloProvider from \"./apollo/MyApolloProvider\";\nimport GroupTabs from \"./GroupTabs\";\nimport { useVKBridge } from \"./lib/vk-bridge-react-bindings\";\nimport CreateGroup from \"./pages/CreateGroup\";\nimport JoinGroup from \"./pages/JoinGroup\";\nimport SelectGroup from \"./pages/SelectGroup\";\nimport URLS from \"./URLS\";\n\nsetupConfig({\n    backButtonText: \"назад\"\n});\n\nconst App: React.FC = () => {\n    useVKBridge({ darkSchemeBodyClass: \"dark\" });\n\n    return <IonApp>\n        <IonReactHashRouter>\n            <IonPage>\n                {/* // todo split into 2 components */}\n                <MyApolloProvider>\n                    <IonRouterOutlet>\n                        <Route path=\"/\" exact render={() => <Redirect to={URLS.JOINED_GROUPS} />} />\n                        <Route path={URLS.JOINED_GROUPS} exact component={SelectGroup} />\n                        <Route path={URLS.CREATE_GROUP} exact component={CreateGroup} />\n                        <Route path={URLS.JOIN_GROUP} exact component={JoinGroup} />\n                        <Route path=\"/group/\" component={GroupTabs} />\n                    </IonRouterOutlet>\n                </MyApolloProvider>\n            </IonPage>\n        </IonReactHashRouter>\n    </IonApp>;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// include all app styles\nimport \"./styles\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}